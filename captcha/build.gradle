ext {
    joda_time = '2.6'
    servlet_api = '3.0.1'
    jaxrs = '2.0.1'
    guice_bridge = '2.4.0-b09'
}

dependencies {
    compile files("lib/kaptcha-2.3.2.jar")
    compile project(":runtime")

    compile 'mysql:mysql-connector-java:5.1.34'

    compile "joda-time:joda-time:$joda_time"
    compile "javax.servlet:javax.servlet-api:$servlet_api"
    compile "javax.ws.rs:javax.ws.rs-api:$jaxrs"
    compile "org.glassfish.hk2:guice-bridge:$guice_bridge"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:$jersey"
    compile "org.glassfish.jersey.test-framework:jersey-test-framework-core:$jersey"
    compile "org.glassfish.jersey.connectors:jersey-apache-connector:$jersey"
    compile "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:$jersey"
}

task standaloneJar(type: Jar, dependsOn: jar) {
    baseName = "captcha"
    classifier = "standalone"
    version = ""

    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)

    from configurations.runtime.asFileTree.files.collect { zipTree(it) }

    exclude("META-INF/*.SF")
    exclude("META-INF/*.DSA")
    exclude("META-INF/*.RSA")
    exclude("META-INF/*.RSA")
    exclude("META-INF/*.RSA")
}

task docker(type: Exec) {
    def dockerfile = new File('Dockerfile')
    dockerfile.text= '''
        FROM java:8
        MAINTAINER jksun
        ENV REFRESHED_AT 2014-11-25

        COPY captcha/build/libs/captcha-standalone.jar captcha-standalone.jar

        ENV PORT 4000

        EXPOSE 4000

        CMD ["java", "-cp", "captcha-standalone.jar", "com.thoughtworks.captcha.CaptchaServer", ">", "/tmp/log", "2>&1"]
    '''
    commandLine 'docker', 'build', '-t', 'registry.thoughtworks.com:5000/captcha', '..'
}

task push(type: Exec) {
    commandLine 'docker', 'push', 'registry.thoughtworks.com:5000/captcha'
}
